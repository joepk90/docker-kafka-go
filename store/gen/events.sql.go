// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: events.sql

package gen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const addEventRecord = `-- name: AddEventRecord :one
INSERT INTO kafka_events (event_id, event_tag, event_stat, event_msg, request_date)
VALUES ($1, $2, $3, $4, CURRENT_TIMESTAMP)
RETURNING id
`

type AddEventRecordParams struct {
	EventID   pgtype.Int8
	EventTag  pgtype.Text
	EventStat pgtype.Text
	EventMsg  pgtype.Text
}

func (q *Queries) AddEventRecord(ctx context.Context, arg AddEventRecordParams) (int64, error) {
	row := q.db.QueryRow(ctx, addEventRecord,
		arg.EventID,
		arg.EventTag,
		arg.EventStat,
		arg.EventMsg,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getEventRecord = `-- name: GetEventRecord :one
SELECT id
FROM kafka_events
WHERE id = $1
`

func (q *Queries) GetEventRecord(ctx context.Context, id int64) (int64, error) {
	row := q.db.QueryRow(ctx, getEventRecord, id)
	err := row.Scan(&id)
	return id, err
}
